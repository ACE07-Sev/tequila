# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
from recommonmark.parser import CommonMarkParser
import sphinx_bootstrap_theme
import sphinx_automodapi
##import numpydoc

sys.path.insert(0, os.path.abspath('../src'))
#sys.path.insert(0, os.path.abspath('../../'))

import matplotlib
matplotlib.use("agg")

from sphinx.domains.python import PythonDomain


# -- Project information -----------------------------------------------------

project = 'tequila'
#copyright = '2019, Jakob S. Kottmann, Sumner Alperin-Lea, Teresa Tamayo, Cyrille Lavigne, Abhinav Anand, Maha Kesebi'
copyright = '2020, Matter Lab'
author = 'Jakob S. Kottmann, Sumner Alperin-Lea, Teresa Tamayo, Cyrille Lavigne, Abhinav Anand, Maha Kesebi'

# The full version, including alpha/beta/rc tags
release = 'XXXXX'


# -- General configuration ---------------------------------------------------

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates','_templates/autosummary']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
html_static_path = ['_static','.']
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# Activate the theme.
html_theme = 'bootstrap'
html_theme_path = sphinx_bootstrap_theme.get_html_theme_path()

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

extensions = ['sphinx.ext.napoleon',
              'recommonmark',
              #'numpydoc',
              'sphinx.ext.autodoc',
              'sphinx.ext.doctest',
              'sphinx.ext.autodoc',
              'sphinx.ext.viewcode',
              'matplotlib.sphinxext.plot_directive',
              'sphinx.ext.mathjax', 
              'sphinx_automodapi.automodapi',
              'sphinx.ext.autosummary'] 

source_suffix = ['.rst']

autosectionlabel_prefix_document = True

## Allowing autosummary
## Boolean indicating whether to scan all found documents for autosummary directives, and to generate stub pages for each. It doesn't overwritte stub file unless autosummary_generate_overwrite True
autosummary_generate = True
autosummary_generate_overwrite = False
autosummary_imported_members = False 
autodoc_default_options = {'autosummary': True}

numpydoc_class_members_toctree = False
numpydoc_show_class_members = True

napoleon_google_docstring = False
napoleon_numpy_docstring = True
napoleon_use_param = True
napoleon_use_ivar = True

autoclass_content = 'class'
autodoc_warningiserror = True

### Theme oprtions

html_theme_options = {
    # Navigation bar title. (Default: ``project`` value)
    'navbar_title': 'Tequila',


    # A list of tuples containing pages or urls to link to.
    # Valid tuples should be in the following forms:
    #    (name, page)                 # a link to a page
    #    (name, "/aa/bb", 1)          # a link to an arbitrary relative url
    #    (name, "http://example.com", True) # arbitrary absolute url
    # Note the "1" or "True" value above as the third argument to indicate
    # an arbitrary url.
    'navbar_links': [
         ("Overview", "./tequila_presentation"),
         ("Installation", "./README", False),
         ("API", "./package/index", False),
         ("GitHub", "https://github.com/aspuru-guzik-group/tequila", True),
         ("Tutorials", "./tutorials", False),
    ],

    # Render the next and previous page links in navbar. (Default: true)
    'navbar_sidebarrel': True,

    # Render the current pages TOC in the navbar. (Default: true)
    'navbar_pagenav': False,

    # Location of link to source.
    # Options are "nav" (default), "footer" or anything else to exclude.
    #'source_link_position': 'nav',

    # Bootswatch (https://bootswatch.com/) theme.
    'bootswatch_theme': 'sandstone',

    # Choose Bootstrap version.
    # Values: "3" (default) or "2" (in quotes)
    'bootstrap_version': '3',
}


"""
Taken from: 
https://github.com/torproject/stem/blob/master/docs/conf.py

To get rid of WARNINGS due to usage of sama name Classes, Modules, and Attributes
"""

def skip_members(app, what, name, obj, skip, options):
  if name in ('ATTRIBUTES', 'PARSER_FOR_LINE'):
    return True  # skip the descriptor's parser constants


class PythonDomainNoXref(PythonDomain):
  """
  Sphinx attempts to create cross-reference links for variable names...
    https://github.com/sphinx-doc/sphinx/issues/2549
    https://github.com/sphinx-doc/sphinx/issues/3866
  This causes alot of warnings such as...
    stem/descriptor/networkstatus.py:docstring of
    stem.descriptor.networkstatus.DocumentDigest:: WARNING: more than one
    target found for cross-reference 'digest':
    stem.descriptor.extrainfo_descriptor.ExtraInfoDescriptor.digest, ...
  """

  def resolve_xref(self, env, fromdocname, builder, typ, target, node, contnode):
    if 'refspecific' in node:
      del node['refspecific']

    return super(PythonDomainNoXref, self).resolve_xref(
      env, fromdocname, builder, typ, target, node, contnode)


def setup(app):
  app.connect('autodoc-skip-member', skip_members)
  app.add_domain(PythonDomainNoXref, override = True)

